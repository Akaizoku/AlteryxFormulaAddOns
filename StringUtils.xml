<?xml version="1.0" encoding="utf-8"?>
<!-- This file along with its dll needs to be installed to ...InstallDir...\RuntimeData\FormulaAddIn to run. -->
<FormulaAddIn>
<!--
  <Function>
    <Name>STARTSWITH</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>STARTSWITH(String, String)</InsertText>
    <Description>Does A String Start With Another.</Description>
    <Formula>LEFT(P1,LENGTH(P2))=P2</Formula>
  </Function>
  <Function>
    <Name>ENDSWITH</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>ENDSWITH(String, String)</InsertText>
    <Description>Does A String End With Another.</Description>
    <Formula>RIGHT(P1,LENGTH(P2))=P2</Formula>
  </Function>
  <Function>
    <Name>CONTAINS</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>CONTAINS(String, String)</InsertText>
    <Description>Does A String Contain Another.</Description>
    <Formula>FINDSTRING(P1,P2)!=-1</Formula>
  </Function>
//-->
  <Function>
    <Name>LEFTPART</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>LEFTPART(String, Separator)</InsertText>
    <Description>Get The Left Part Upto A Separator</Description>
    <Formula>IIF(FINDSTRING(P1,P2) == -1, P1, LEFT(P1, FINDSTRING(P1,P2)))</Formula>
  </Function>
  <Function>
    <Name>RIGHTPART</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>RIGHTPART(String, Separator)</InsertText>
    <Description>Get The Rest Of The String After First Separator</Description>
    <Formula>IIF(FINDSTRING(P1,P2) == -1, P1, SUBSTRING(P1, FINDSTRING(P1,P2) + LENGTH(P2)))</Formula>
  </Function>
  <Function>
    <Name>SPLIT</Name>
    <NumParams variable="false">3</NumParams>
    <Category>String</Category>
    <InsertText>Split(String, Delimeter, Index)</InsertText>
    <Description>Get a part of a delimeted string</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>Split</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>RANDOMSTRING</Name>
    <NumParams variable="true">1</NumParams>
    <Category>Generator</Category>
    <InsertText>RandomString(Pattern, CharSet1, ...)</InsertText>
    <Description>Get a random string</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>RandomString</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>RANDOMIPADDRESS</Name>
    <NumParams variable="true">0</NumParams>
    <Category>Generator</Category>
    <InsertText>RandomIPAddress(CIDR)</InsertText>
    <Description>Get a random IP address within a CIDR block</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>RandomIPAddress</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>RANDOMITEM</Name>
    <NumParams variable="true">1</NumParams>
    <Category>Generator</Category>
    <InsertText>RandomItem(Item1, Item2, Item3)</InsertText>
    <Description>Get a random item from a list</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>RandomItem</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>TOROMAN</Name>
    <NumParams variable="false">1</NumParams>
    <Category>String</Category>
    <InsertText>ToRoman(Value)</InsertText>
    <Description>Get a Roman Numeral Version of a Number</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>ToRoman</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>FROMROMAN</Name>
    <NumParams variable="false">1</NumParams>
    <Category>String</Category>
    <InsertText>FromRoman(Value)</InsertText>
    <Description>Given a Roman Numeral Get Number</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>FromRoman</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>FINDSTRINGLAST</Name>
    <NumParams variable="false">2</NumParams>
    <Category>String</Category>
    <InsertText>FINDSTRINGLAST(String, Target)</InsertText>
    <Description>Searches for the occurrence of Target within String from end and returns the numeric position of it.</Description>
    <Formula>IIF(IsNull(P2),0,IIF(CONTAINS(P1,P2),LENGTH(P1) - LENGTH(P2) - FINDSTRING(REVERSESTRING(P1),REVERSESTRING(P2)),-1))</Formula>
  </Function>
</FormulaAddIn>
