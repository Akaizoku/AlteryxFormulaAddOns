<?xml version="1.0" encoding="utf-8"?>
<!-- This file along with its dll needs to be installed to ...InstallDir...\RuntimeData\FormulaAddIn to run. -->
<!-- Is Culture Specific as Uses names of weekdays -->
<FormulaAddIn>
  <Function>
    <Name>YEAR</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>YEAR(Date)</InsertText>
    <Description>Get year of Date</Description>
    <Formula>ToNumber(Left(P1, 4))</Formula>
  </Function>
  <Function>
    <Name>CENTURY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>CENTURY(Date)</InsertText>
    <Description>Get century of Date</Description>
    <Formula>FLOOR(YEAR(P1)/100)+1</Formula>
  </Function>
  <Function>
    <Name>MONTH</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>MONTH(Date)</InsertText>
    <Description>Get month (1-12) of Date</Description>
    <Formula>ToNumber(Substring(P1, 5, 2))</Formula>
  </Function>
  <Function>
    <Name>DAY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>DAY(Date)</InsertText>
    <Description>Get day of month (1-31) of Date</Description>
    <Formula>ToNumber(Substring(P1, 8, 2))</Formula>
  </Function>
  <Function>
    <Name>HOUR</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Time</Category>
    <InsertText>HOUR(Time)</InsertText>
    <Description>Get time of a datetime or a time</Description>
    <Formula>ToNumber(Substring(P1, IIF(LENGTH(P1)=8, 0, 11), 2))</Formula>
  </Function>
  <Function>
    <Name>MINUTE</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Time</Category>
    <InsertText>MINUTE(Time)</InsertText>
    <Description>Get time of a datetime or a time</Description>
    <Formula>ToNumber(Substring(P1, IIF(LENGTH(P1)=8, 3, 14), 2))</Formula>
  </Function>
  <Function>
    <Name>SECOND</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Time</Category>
    <InsertText>SECOND(Time)</InsertText>
    <Description>Get time of a datetime or a time</Description>
    <Formula>ToNumber(Substring(P1, IIF(LENGTH(P1)=8, 6, 17), 2))</Formula>
  </Function>
  <Function>
    <Name>WEEKDAY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>WEEKDAY(Date)</InsertText>
    <Description>Convert a date to day of week (0 Sunday - 6 Saturday)</Description>
    <Formula>IIF(VERSION()>=11,ToNumber(DateTimeFormat(P1, "%w")),Switch(DateTimeFormat(P1,"%a"),NULL(),"Sun",0,"Mon",1,"Tue",2,"Wed",3,"Thu",4,"Fri",5,"Sat",6))</Formula>
  </Function>
  <Function>
    <Name>QUARTER</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>QUARTER(Date)</InsertText>
    <Description>Convert date to quarter</Description>
    <Formula>FLOOR((MONTH(P1)+2)/3)</Formula>
  </Function>
  <Function>
    <Name>ISLEAPYEAR</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>ISLEAPYEAR(Year)</InsertText>
    <Description>Is a year a leap year</Description>
    <Formula>(MOD(P1, 4) == 0) AND (MOD(P1, 100) != 0 OR MOD(P1, 400) == 0)</Formula>
  </Function>
  <Function>
    <Name>ORDINALDAY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>ORDINALDAY(Date)</InsertText>
    <Description>The position within the year</Description>
    <Formula>ToNumber(DateTimeFormat(P1, "%j"))</Formula>
  </Function>
  <Function>
    <Name>MAKEDATE</Name>
    <NumParams variable="true">1</NumParams>
    <Category>Date</Category>
    <InsertText>MAKEDATE(Year, Month, Day)</InsertText>
    <Description>Create a Date</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>MakeDate</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>MAKETIME</Name>
    <NumParams variable="true">0</NumParams>
    <Category>Time</Category>
    <InsertText>MAKETIME(Hour, Min, Second)</InsertText>
    <Description>Create a Date</Description>
    <Dll>
      <Name>AlteryxAbacus.dll</Name>
      <EntryPoint>MakeTime</EntryPoint>
    </Dll>
  </Function>
  <Function>
    <Name>MAKEDATETIME</Name>
    <NumParams variable="false">6</NumParams>
    <Category>DateTime</Category>
    <InsertText>MAKEDATETIME(Year, Month, Day, Hour, Min, Second)</InsertText>
    <Description>Create a DateTime</Description>
    <Formula>MAKEDATE(P1,P2,P3) + ' ' + MAKETIME(P4,P5,P6)</Formula>
  </Function>
  <Function>
    <Name>TODATE</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>TODATE(DateTime)</InsertText>
    <Description>Truncates a datetime and returns as a Date</Description>
    <Formula>IIF(LENGTH(P1) = 10, P1, IIF(LENGTH(P1) = 19, LEFT(P1, 10), NULL()))</Formula>
  </Function>
  <Function>
    <Name>TODATETIME</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>TODATETIME(Date)</InsertText>
    <Description>Appends midnight to a date and returns a datetime</Description>
    <Formula>IIF(LENGTH(P1) = 19, P1, IIF(LENGTH(P1) = 10, P1 + ' 00:00:00', NULL()))</Formula>
  </Function>
  <Function>
    <Name>TODATETIME</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>TODATETIME(Date)</InsertText>
    <Description>Appends midnight to a date and returns a datetime</Description>
    <Formula>IIF(LENGTH(P1) = 19, RIGHT(P1,8), IIF(LENGTH(P1) = 10, '00:00:00', NULL()))</Formula>
  </Function>
  
  <Function>
    <Name>DATEADD</Name>
    <NumParams variable="false">3</NumParams>
    <Category>Date</Category>
    <InsertText>DATEADD(dt,i,u)</InsertText>
    <Description>Add a specific interval to a date/time and returns as a Date.  DateAdd([Date], -3, "days")</Description>
    <Formula>Left(DateTimeAdd(P1, P2, P3), 10)</Formula>
  </Function>

  <Function>
    <Name>BUSINESSDAYS</Name>
    <NumParams variable="false">2</NumParams>
    <Category>Date</Category>
    <InsertText>BUSINESSDAYS(StartDate, EndDate)</InsertText>
    <Description>Number of business days (M-F) between two dates.</Description>
    <Formula>IIF(P1>P2,NULL(), 1 + ((DateTimeDiff(P2,P1,"days")*5 - (WEEKDAY(P1)-WEEKDAY(P2))*2) / 7) +  IIF(WEEKDAY(P2)==6,-1,0) +  IIF(WEEKDAY(P1)==0,-1,0))</Formula>
  </Function>
  
  <Function>
    <Name>WEEKSTART</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>WEEKSTART(Date)</InsertText>
    <Description>Move to First day of the week (Sunday)</Description>
    <Formula>DateAdd(P1, 0 - WEEKDAY(P1), "days")</Formula>
  </Function>
  <Function>
    <Name>WEEKEND</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>WEEKDAY(Date)</InsertText>
    <Description>Move to Last day of the week (Saturday)</Description>
    <Formula>DateAdd(P1, 6 - WEEKDAY(P1), "days")</Formula>
  </Function>
  <Function>
    <Name>MONTHSTART</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>MONTHSTART(Date)</InsertText>
    <Description>Create the first day of the month</Description>
    <Formula>LEFT(P1,8) + "01"</Formula>
  </Function>
  <Function>
    <Name>MONTHEND</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>MONTHEND(Date)</InsertText>
    <Description>Create the last day of the month</Description>
    <Formula>DATEADD(DATEADD(LEFT(P1,8) + "01", 1, "Months"), -1, "Days")</Formula>
  </Function>
  <Function>
    <Name>QUARTERSTART</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>QUARTERSTART(Date)</InsertText>
    <Description>Create the first day of the quarter</Description>
    <Formula>LEFT(P1,5) + RIGHT("00" + TOSTRING(QUARTER(P1) * 3 - 2, 0), 2) + "-01"</Formula>
  </Function>
  <Function>
    <Name>QUARTEREND</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>QUARTEREND(Date)</InsertText>
    <Description>Create the last day of the quarter</Description>
    <Formula>MONTHEND(LEFT(P1,5) + RIGHT("00" + TOSTRING(QUARTER(P1) * 3, 0), 2) + "-01")</Formula>
  </Function>
  <Function>
    <Name>YEARSTART</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>YEARSTART(Date)</InsertText>
    <Description>Create the first day of the year</Description>
    <Formula>LEFT(P1,5) + "01-01"</Formula>
  </Function>
  <Function>
    <Name>YEAREND</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>YEAREND(Date)</InsertText>
    <Description>Create the last day of the year</Description>
    <Formula>LEFT(P1,5) + "12-31"</Formula>
  </Function>
  <Function>
    <Name>DATEFROMMDY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>DATEFROMMDY(MDY)</InsertText>
    <Description>Parse a M/D/Y date string into Alteryx format. Copes with or without leading 0 and with various separators.</Description>
    <Formula>DATETIMEPARSE(REGEX_Replace(Trim(REGEX_Replace(" " + P1,"(\D)(\d)(?=\D)","${1}0$2")), "\D", "/"), "%m/%d/" + IIF(REGEX_Match(P1,".*\D\d{1,2}$"), "%y", "%Y"))</Formula>
  </Function>
  <Function>
    <Name>DATEFROMDMY</Name>
    <NumParams variable="false">1</NumParams>
    <Category>Date</Category>
    <InsertText>DATEFROMDMY(DMY)</InsertText>
    <Description>Parse a D/M/Y date string into Alteryx format. Copes with or without leading 0 and with various separators.</Description>
    <Formula>DATETIMEPARSE(REGEX_Replace(Trim(REGEX_Replace(" " + P1,"(\D)(\d)(?=\D)","${1}0$2")), "\D", "/"), "%d/%m/" + IIF(REGEX_Match(P1,".*\D\d{1,2}$"), "%y", "%Y"))</Formula>
  </Function>
  <Function>
    <Name>DATEPART</Name>
    <NumParams variable="false">2</NumParams>
    <Category>DateTime</Category>
    <InsertText>DATEPART(DateTime, Part)</InsertText>
    <Description>Reproduces SQL Server's DatePart function. Support SQL servers standard parts as well as the numeric Alteryx date formatters.</Description>
    <Formula>Switch(LOWERCASE(P2),NULL(),"year",Year(P1),"yyyy",Year(P1),"yy",Year(P1),"%y",Year(P1),"cc",Century(P1),"c",Century(P1),"%c",Century(P1),"quarter",Quarter(P1),"qq",Quarter(P1),"q",Quarter(P1),"month",Month(P1),"mm",Month(P1),"m",Month(P1),"dayofyear",OrdinalDay(P1),"dy",OrdinalDay(P1),"y",OrdinalDay(P1),"%j",OrdinalDay(P1),"day",DAY(P1),"dd",DAY(P1),"d",DAY(P1),"%d",DAY(P1),"%e",DAY(P1),"hour",HOUR(P1),"hh",HOUR(P1),"h",HOUR(P1),"%h",HOUR(P1),"%k",HOUR(P1),"mi",MINUTE(P1),"n",MINUTE(P1),"ss",SECOND(P1),"s",SECOND(P1),"%s",SECOND(P1),"%m",IIF(CharToInt(Right(P2,1))=77, MINUTE(P1),MONTH(P1)),"weekday",WEEKDAY(P1),"dw",WEEKDAY(P1))</Formula>
  </Function>
</FormulaAddIn>
